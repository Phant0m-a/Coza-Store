add UUID() on every ID: ðŸ†” 

*// Blog should also be sorted on months or year {stacks for month or year of blogs}
blog:{
	img: String,
	title: String,
	desc: String,
	paragraph: String,
	comments: ref('Comment'),
	date: Date,
	author: String,	*//it can be ref('Author') or ref('User').
	tags:[], // first three tags could be included in blog card.
	catagory : ref('Catagory')
     }

Notes:
	*//number of comments needs to displayed too both on blogCard and blogDetails.


------------------------------------------------------------------------------------------------
blogCatagory:{
	title: String required,	

	}

------------------------------------------------------------------------------------------------

featuredProduct:{
	img:,
	title:,
	price:,	
*//how about using featured field in products schema
    }


------------------------------------------------------------------------------------------------

*//find mechanism how product is New, Popular or has average rating.
product:{
	img: String required,
	title: String required,
	price: Number required,
	catagory: ref('Category')
	size: s,m,l,xl, required
	color: red, blue, white, grey, required	
	quantity: Number min:1 required,
	featured: bool, Default:false, //bool
	desc: String required,
	demoImag:[{img: , *//favorite[each img find mechanism ]}] 
	*//implement favorites mechanism for every user (how to determine or save if user has FAV 	some item)
	productType: String, required   ref('ProductType') 
	 //male, female, watch, bag, watch etc.
}


productType{
	imgSrc: String required,
	title: String required,
	desc: String required
}


----------------------------------------------------------------------------------------------

Category:{
	title:
	
    }

--------------------------------------------------------------------------------------------
// its feedback in about page
SendMessage:{
	email: email required,
	message: String required,
	date: Date required,

    }


-------------------------------------------------------------------------------------------
// leave a comment for each blog in Blog Page 
comment:{
	email: email required,
	comment: String required,
	name: String required,
	//for product and product
	//also need ratings and averages for 5 to 1 stars each 
	//blog: ref('blog'),
	//product: ref('product'),
	website: Default:www.CozaStore.com
	date: Date required,
	}


-------------------------------------------------------------------------------------------

// Your cart
Cart:{
	[
	  title: ref('product'),
	  quantity: number ,
	]
       Total: Number
     }

-------------------------------------------------------------------------------------------

user:{
	name: String required,
	email: email required,
	password: String{hashed} required,
	img: String,
	}



-------------------------------------------------------------------------------------------
To do :
//userRouter 
	/:get allusers 
	//implement join query b/w users & their blogs if possible (attach feedback if any)

//for product and product
	//also need ratings and averages for 5 to 1 stars each 
	//blog: ref('blog'),
	//product: ref('product'),


//Blog router 
	/:post
	// implement tags, use spilcing and index to add or remove or add a tag
	// same goes for adding or removing comments
    // comments add array isnt working	

//product router 
	/:put
	// ToDo: Demo img uses array work later on it
	/:post
	// TODO:pushing to array needs work
	// TODO:pushing to array needs work
	/:Delete
	//Todo: demoImg have array of img So delete while looping!

//productType & blogCat
	//:add put and delete routes


//feedback router
	:/post 
	// implement, that user can be attached with each comment to keep track of every feedback



*// Future implementation of NEWSLETTER
*// add delete user feature or block user 
*// Comments for Products (ref('products'))



Front-end Part
--------------
	//* 1.	view all users and blogs. 
	//* buttons to view->feedbacks & blogs -> moderate comments
	//* 2.		



Admin Panel Part
----------------
	*// Do Blog Part first
	   â˜‘ get, post, put, delete



	*// Logged In user
		Admin:Should be able to 
			âœ…- add user;
			âœ…- to add, edit, delete, hide/show products;
			âœ…- See all users and their blogs
			- (also modify or delete/hide);
			- moderate(add, edit or delete comments);
			- Can write his own blogs; (just need a new route!)
			âœ…- See feedbacks and those user info;
			

			Stats:
			- stats for daily blogs and blogs upload by individual user.
			- products sold and quantity & per day sold.
			- number of comments and by which person & how many a day and total;


			write/edit/hide/delete/view
			âœ…- FAQ
			âœ…- PrivacyPolicy
			âœ…- Terms&Conditions:
			
		----------------------------------------------------------------
		
		User: Should be able to 
			âœ…- change password & profile pic
			âœ…- write/view blogs'
			âœ…- Edit, delete or hide blog;  
			- moderate comments on blogs,(report or hide them!).
			- view his purchased products and //favorite items

		----------------------------------------------------------------




